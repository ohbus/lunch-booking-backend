name: Maven PR Checker

on:
  pull_request_target:
    branches: master
    types: [ opened, synchronize, reopened ]

jobs:

  build:

    name: Build
    needs: check-code-formatting
    
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: 11
          distribution: 'temurin'
          cache: 'maven'
      
      - name: Cache SonarCloud packages
        uses: actions/cache@v2
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      
      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/} | tr / -)"
        id: extract_branch
      
      - name: Build Package
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
            if [ -n "${{ github.event.pull_request.number }}" ]; then
              MAVEN_OPTS="-Xmx4096m" xvfb-run ./mvnw -B clean verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
                 -Dsonar.pullrequest.key=${{ github.event.pull_request.number }} \
                 -Dsonar.pullrequest.branch=${{ steps.extract_branch.outputs.branch }} \
                 -Dsonar.pullrequest.base=master
            else
              echo "No Sonar PR analysis as this is not a Pull Request"
            fi

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      
      - name: Build Container
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: false
          tags: ghcr.io/ohbus/lunch-booking-backend:pr-snapshot
  
  
  check-code-formatting:

    name: Check Code Formatting

    strategy:
      matrix:
        platform: [ ubuntu-latest , macos-latest , windows-latest ]
    
    runs-on: ${{ matrix.platform }}

    steps:
    - name: Checkout Code
      uses: actions/checkout@v2
    
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: 11
        distribution: 'temurin'
        cache: 'maven'
    
    - name: Check Code Formatting
      run: |
        ./mvnw -e spotless:check
        echo "Run the command './mvnw spotless:apply' to fix Java formatting if this job fails or Build with Maven"
