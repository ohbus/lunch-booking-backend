#
# Lunch Booking - Lunch Booking REST Application
# Copyright Â© 2022 Subhrodip Mohanta (hello@subho.xyz)
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#

###### THIS IS THE DEV PROPERTIES #####

# =====================================
# ========= SPRING SECURITY ===========
# =====================================

app.security.jwt.salt.length=256

app.security.jwt.token.validity.milliseconds=2592000000

app.security.jwt.keystore-location=keys/keystore-dev.jks
app.security.jwt.keystore-password=${KEYSTORE_PASSWORD}
app.security.jwt.key-alias=${KEYSTORE_ALIAS}
app.security.jwt.private-key-passphrase=${KEYSTORE_PASSPHRASE}

otp.validity.mins=2

generated.password.size=16

app.security.cors.url=${CORS_URL}

logging.level.org.springframework.security=INFO


# =====================================
# =========== MAIL SENDER =============
# =====================================

spring.mail.host=email-smtp.ap-south-1.amazonaws.com
spring.mail.port=587
spring.mail.username=${SMTP_UNAME}
spring.mail.password=${SMTP_PASSWD}

spring.mail.properties.mail.protocol=smtps

spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.properties.mail.smtp.ssl.enavle=true

#spring.mail.properties.mail.smtp.auth=true
#spring.mail.properties.mail.smtp.ssl.trust=smtp.office365.com
#spring.mail.properties.mail.tls=true

spring.mail.properties.mail.smtps.auth=true

custom.mail.from.address=${EMAIL_FROM_ADDR}
custom.mail.from.name=Lunch Booking Application
custom.mail.reply-to.address=${EMAIL_REPLY_TO_ADDR}
custom.mail.reply-to.name=${EMAIL_REPLY_TO_NAME}

custom.mail.manager.to.addresses=${EMAIL_MANAGERS_TO_ADDR}
custom.mail.manager.cc.addresses=${EMAIL_MANAGER_CC_ADDR}


# =====================================
# =========== DATA SOURCE =============
# =====================================

# Set here configurations for the database connection
spring.datasource.url=jdbc:mysql://${MYSQL_DB_HOST}:${MYSQL_DB_PORT}/twitter?createDatabaseIfNotExist=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=Asia/Kolkata&useSSL=false

# Username and secret
spring.datasource.username=${MYSQL_DB_UNAME}
spring.datasource.password=${MYSQL_DB_PASSWD}

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 1

spring.datasource.tomcat.test-while-idle=true
spring.datasource.tomcat.validation-query=SELECT 1


# ====================================
# ========= JPA / HIBERNATE ==========
# ====================================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).
# Show or not log for each sql query
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=true


# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MariaDB103Dialect
spring.jpa.properties.hibernate.id.new_generator_mappings=false


#Allowed Domain for User Registration
app.signup.email.allowed.domain=${ALLOWED_DOMAINS}
